@import 'styles/config';

// copy hugsmidjan loading screen

@keyframes interwind {
  0% {
    transform:rotate(0) translate3d(0, -20px, 0) scale(0);

    animation-timing-function: cubic-bezier(0.2, 0, 0.8, 1);
  }

  50% {
    transform: rotate(180deg) translate3d(0, -20px, 0) scale(1);

    animation-timing-function: cubic-bezier(0, 0.2, 1, 0.8);
  }

  100% {
    transform: rotate(360deg) translate3d(0, -20px, 0) scale(0);
    
    animation-timing-function: cubic-bezier(0.2, 0, 0.8, 1);
  }
}

.loading {
  @include fit(fixed);

  display: flex;
  align-items: center;
  justify-content: center;

  contain: strict;

  z-index: $zindex-header + 1;

  pointer-events: none;
  user-select: none;
  
  opacity: 0;


  background: var(--color-background);

  &.enter {
    opacity: 0;
  }

  &.enterActive,
  &.enterDone,
  &.exit {
    opacity: 1;
  }
  
  &.exitActive {
    opacity: 0;
  }

  &.enterActive,
  &.exitActive {
    transition: opacity 250ms $ease-out-quad;
  }


  &__inner {
    contain: strict;

    position: relative;
  
    width: 201px;
    height: 200px;
    overflow: hidden;

    // hide loading
    text-indent: 201px;
    white-space: nowrap;

    @media (prefers-reduced-motion: reduce) {
      display: flex;
      align-items: flex-end;
      justify-content: center;

      text-indent: 0;
    }
  
    &::before,
    &::after {
      content: '';

      position: absolute;
      top: 70px;
      left: 70px;

      width: 60px;
      height: 60px;

      border-radius: 50%;

      background: var(--color-primary);

      animation-name: interwind;
      animation-duration: 1400ms;
      animation-iteration-count: infinite;

      will-change: transform;
    }
  
    &::after {
      background: var(--color-font);

      animation-delay: -700ms;
    }

    // static layout for reduced motion
    @media (prefers-reduced-motion: reduce) {
      &::before,
      &::after {
        animation: none;
      }

      &::before {
        transform: rotate(-120deg) translate3d(0, -20px, 0) scale(0.9);
      }

      &::after {
        transform: rotate(90deg) translate3d(0, -15px, 0) scale(0.55);
      }
    }
  }
}